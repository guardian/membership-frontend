# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET            /robots.txt                            controllers.CachedAssets.at(path="/public", file="robots.txt", aggressiveCaching:Boolean ?= false )
GET         /humans.txt                                controllers.CachedAssets.at(path="/public", file="humans.txt", aggressiveCaching:Boolean ?= false )
GET         /google30b9d2c5743afc06.html               controllers.CachedAssets.at(path="/public", file="google30b9d2c5743afc06.html", aggressiveCaching:Boolean ?= false )
GET         /favicon.ico                               controllers.CacheBustedAssets.at(path="images/favicons/32x32.ico")
GET         /sitemap.xml                               controllers.SiteMap.sitemap()

# Home page
GET         /                                          controllers.FrontPage.index()
GET         /welcome                                   controllers.FrontPage.welcome()

# System
GET         /healthcheck                               controllers.Healthcheck.healthcheck()
GET         /test-users                                controllers.Testing.testUser
GET         /analytics-off                             controllers.Testing.analyticsOff
GET         /feature/:feature                          controllers.FeatureOptIn.state(feature: Feature)
GET         /feature/:feature/:onOrOff                 controllers.FeatureOptIn.setFeatureOnOrOff(feature: Feature, onOrOff: OnOrOff)

# Join
GET         /join/*any                                controllers.Redirects.whySupportRedirectIgnore(any)
GET         /choose-tier                               controllers.Redirects.whySupportRedirect()
GET         /membership-content                        controllers.Redirects.whySupportRedirect()

# Normal user signin:
GET         /signin                                    controllers.Login.chooseSigninOrRegister(returnUrl: String)

# Staff signin (note, done by OAuth, in addition to regular signin)
GET         /staff/unauthorised                        controllers.StaffAuth.unauthorised()
GET         /staff/login                               controllers.OAuth.login()
GET         /staff/loginAction                         controllers.OAuth.loginAction()
GET         /oauth2callback                            controllers.OAuth.oauth2Callback

GET         /maintenance                               controllers.Outages.maintenanceMessage
GET         /planned-outages                           controllers.Outages.summary

# Staff event page to show discounted events
GET         /staff/event-overview                      controllers.Staff.eventOverview
GET         /staff/event-overview/masterclasses        controllers.Staff.eventOverviewMasterclasses
GET         /staff/event-overview/details              controllers.Staff.eventOverviewDetails

# Subscription
GET         /subscription/remaining-tickets            controllers.SubscriptionController.remainingTickets()

# What's On
GET         /events                                    controllers.WhatsOn.list()
GET         /events.json                               controllers.rest.EventApi.liveEvents
GET         /masterclasses.json                        controllers.rest.EventApi.masterclassEvents


GET         /events/archive                            controllers.WhatsOn.listArchive
GET         /events/calendar                           controllers.WhatsOn.calendar
GET         /masterclasses                             controllers.WhatsOn.masterclassesList()
GET         /masterclasses/all                         controllers.WhatsOn.masterclassesList()
GET         /masterclasses/:tag                        controllers.WhatsOn.masterclassesListFilteredBy(tag, subTag = "")
GET         /masterclasses/:tag/:subTag                controllers.WhatsOn.masterclassesListFilteredBy(tag, subTag)

# Event Details
GET         /event/:id                                 controllers.Event.details(id)
GET         /live/:id                                  controllers.Event.detailsLive(id)
GET         /masterclass/:id                           controllers.Event.detailsMasterclass(id)
GET         /event/:id/embed                           controllers.Event.embedData(id)
GET         /event/:id/buy                             controllers.Event.buy(id)
GET         /event/:id/thankyou/pixel                  controllers.Event.thankyouPixel(id)
GET         /event/:id/card                            controllers.Event.embedCard(id)
GET         /preview-event/:id                         controllers.Event.preview(id)
GET         /preview-masterclass/:id                   controllers.Event.previewMasterclass(id)

# Tier
GET         /tier/change                               controllers.Redirects.supportRedirect
GET         /tier/cancel                               controllers.Redirects.redirectToNewCancellationFlow()
POST        /tier/cancel/confirm                       controllers.Redirects.redirectToNewCancellationFlow()
GET         /tier/cancel/paid/summary                  controllers.Redirects.redirectToNewCancellationFlow()
GET         /tier/cancel/free/summary                  controllers.Redirects.redirectToNewCancellationFlow()
GET         /tier/change/patron                        controllers.Info.patronsRedirect

# Information
GET         /patrons                                   controllers.Info.patronsRedirect
GET         /supporter                                 controllers.Info.supporterRedirect(countryGroup: Option[CountryGroup])
GET         /about/supporter                           controllers.Redirects.supportRedirect
GET         /:countryGroup/supporter                   controllers.Info.supporterFor(countryGroup: CountryGroup)

GET            /uk                                    controllers.Redirects.supportRedirect

# Styleguide
GET            /patterns                              controllers.PatternLibrary.patterns

# User
GET            /user/me                               controllers.User.me
GET            /user/check-existing-email             controllers.User.checkExistingEmail(email: String)

# Vanity URLS
GET            /subscriber-offer                      controllers.Redirects.homepageRedirect

# Redirects
GET            /about                                 controllers.Redirects.homepageRedirect
GET            /founder                               controllers.VanityUrl.redirect
GET            /join-challenger                       controllers.Redirects.homepageRedirect
GET            /join                                  controllers.Info.supporterRedirect(countryGroup: Option[CountryGroup])

GET            /assets/bookmarklets/*bookmarklet      controllers.CachedAssets.bookmarkletAt(path="/public/bookmarklets/", bookmarklet)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*assetFile                         controllers.CachedAssets.at(path="/public", assetFile, aggressiveCaching:Boolean ?= true)

# Giraffe
GET         /contribute                                controllers.Giraffe.redirectToContributions()
GET         /:countryGroup/contribute                  controllers.Giraffe.redirectToContributionsFor(countryGroup: CountryGroup)

# Geo Country
GET         /geocountry                              controllers.GeoCountry.getCountry()
