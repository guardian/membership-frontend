/**
 * `animation` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/animation animation on MDN
 * 
 * @group css3
 */
@mixin animation($args) {
    -webkit-animation: $args;
    -moz-animation: $args;
    animation: $args;
}

/**
 * `animation-delay` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay animation-delay on MDN
 * 
 * @group css3
 */
@mixin animation-delay($args) {
    -webkit-animation-delay: $args;
    -moz-animation-delay: $args;
    animation-delay: $args;
}

/**
 * `background-size` prefixer.
 *
 * @param {Arglist} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/background-size background-size on MDN
 * 
 * @group css3
 */
@mixin background-size($args...) {
    -webkit-background-size: $args;
    -moz-background-size: $args;
    background-size: $args;
}

/**
 * `border-radius` prefixer.
 *
 * @param {Number} $radius (5px)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius border-radius on MDN
 * 
 * @group css3
 */
@mixin border-radius($radius: 5px) {
    // If we want to draw a circle, output a pixel value instead,
    // as older versions of WebKit do not support % in border-radius
    @if $radius == 50% {
        $radius: 1000px;
    }
    
    @if function-exists(rem) {
        -webkit-border-radius: rem($radius);
        border-radius: rem($radius);
    } @else {
        -webkit-border-radius: $radius;
        border-radius: $radius;
    }
}

/**
 * `box-shadow` prefixer.
 *
 * @param {Arglist} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow box-shadow on MDN
 * 
 * @group css3
 */
@mixin box-shadow($args...) {
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    box-shadow: $args;
}

/**
 * `box-sizing` prefixer.
 *
 * @param {String} $box
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing box-sizing on MDN
 * 
 * @group css3
 */
@mixin box-sizing($box) {
    -webkit-box-sizing: $box;
    -moz-box-sizing: $box;
    box-sizing: $box;
}

/**
 * `column-width` prefixer. Uses `rem` if defined.
 *
 * @param {String} $box
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/column-width column-width on MDN
 * 
 * @group css3
 */
@mixin column-width($value: auto) {
    @if function-exists(rem) {
        -webkit-column-width: rem($value);
        -moz-column-width: rem($value);
        column-width: rem($value);
    } @else {
        -webkit-column-width: $value;
        -moz-column-width: $value;
        column-width: $value;
    }
}

/**
 * `flex` prefixer.
 *
 * @param {Number}          $flex-grow   (0)
 * @param {Number}          $flex-shring (1)
 * @param {Number | String} $flex-basis  (auto)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex flex on MDN
 * 
 * @group css3
 */
@mixin flex($flex-grow: 0, $flex-shrink: 1, $flex-basis: auto) {
    -webkit-box-flex: $flex-grow;
    -moz-box-flex: $flex-grow;
    -webkit-flex: $flex-grow $flex-shrink $flex-basis;
    -ms-flex: $flex-grow $flex-shrink $flex-basis;
    flex: $flex-grow $flex-shrink $flex-basis;
}

/**
 * `flex-direction` prefixer.
 *
 * @param {String} $direction row | row-reverse | column | column-reverse
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction flex-direction on MDN
 * 
 * @group css3
 */
@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

/**
 * `flex-basis` prefixer.
 *
 * @param {Number | String} $value (auto)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis flex-basis on MDN
 * 
 * @group css3
 */
@mixin flex-basis($value: auto) {
    -webkit-flex-basis: $value;
    -moz-flex-basis: $value;
    -ms-flex-preferred-size: $value;
    flex-basis: $value;
}

/**
 * `display: flex` prefixer.
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex flex on MDN
 * 
 * @group css3
 */
@mixin flex-display {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

/**
 * `flex-grow` prefixer.
 *
 * @param {Number} $value (0)
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow flex-grow on MDN
 * 
 * @group css3
 */
@mixin flex-grow($value: 0) {
    -webkit-box-flex: $value;
    -webkit-flex-grow: $value;
    -moz-flex-grow: $value;
    -ms-flex-positive: $value;
    flex-grow: $value;
}

/**
 * `@keyframes` prefixer.
 *
 * @param {String} $name
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes @keyframes on MDN
 * 
 * @group css3
 */
@mixin keyframes($name) {
    @-webkit-keyframes $name {
        @content;
    }
    @-moz-keyframes $name {
        @content;
    }
    @keyframes $name {
        @content;
    }
}

/**
 * `transform: rotate()` prefixer.
 *
 * @param {Number} $angle
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transform#rotate transform: rotate() on MDN
 * 
 * @group css3
 */
@mixin rotate($angle) {
    @include transform(rotate($angle));
}

/**
 * `position: sticky` prefixer.
 * Support is very limited but should be used in iOS.
 * Note that Blink temporarily dropped support until they get their
 * "scrolling and compositing house in order"
 *
 * @link http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit position: sticky on WebKit
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/position#Sticky_positioning position: sticky on MDN
 * @link https://code.google.com/p/chromium/issues/detail?id=231752 Meta bug for position: sticky on Chromium's tracker
 * 
 * @group css3
 */
@mixin sticky {
    position: -webkit-sticky; // iOS 6+
    position: -moz-sticky;
    position: -ms-sticky;
    position: sticky;
}

/**
 * `transform` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transform transform on MDN
 * 
 * @group css3
 */
@mixin transform($args) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
    transform: $args;
}

/**
 * `transform-origin` prefixer.
 *
 * @param {*} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin transform-origin on MDN
 * 
 * @group css3
 */
@mixin transform-origin($args) {
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
    transform-origin: $args;
}

/**
 * `transition` prefixer.
 * Do not use when transitionning prefixed properties
 * to avoid impossible code like `-moz-transition: -webkit-border-radius 1s`.
 *
 * @param {Arglist} $args
 *
 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/transition transition on MDN
 * 
 * @group css3
 */
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    transition: $args;
}
