package com.gu.zuora.soap.subscribe

import com.gu.i18n.{Country, Title}
import com.gu.i18n.Currency.GBP
import com.gu.memsub.subsv2.ReaderType.{Direct, Gift}
import com.gu.memsub.{Address, FullName, NormalisedTelephoneNumber}
import com.gu.salesforce.ContactId
import com.gu.zuora.api.{InvoiceTemplate, StripeUKMembershipGateway}
import com.gu.zuora.soap.models.Commands._
import com.gu.zuora.soap.writers.Command._
import com.gu.zuora.soap.writers.XmlWriter
import org.joda.time.LocalDate
import org.specs2.matcher.XmlMatchers
import org.specs2.mutable.Specification
import scalaz.NonEmptyList

class SubscribeTest extends Specification with XmlMatchers {
  val testDate = new LocalDate(2016,1,1)

  "Subscribe" should {
    "Include the XML generated by RatePlanCharge in the right place" in {

      val contact = new ContactId {
        override def salesforceContactId: String = "123"
        override def salesforceAccountId: String = "123"
      }

      val account = Account(
        contact,
        "12345",
        GBP,
        autopay = true,
        paymentGateway = StripeUKMembershipGateway
      )
      val rpc = RatePlan("123", None)

      val name = new FullName {
        override def last: String = "Bobson"
        override def first: String = "Bob"
        override def title: Option[Title] = None
      }

      val address = Address("Line 1", "Line 2", "Tom City", "Tom Land", "123", "TL")
      val email = "test-email-123@thegulocal.com"
      val subscribe = Subscribe(
        account = account,
        ratePlans = NonEmptyList(rpc),
        name = name,
        address = address,
        email = email,
        contractEffective = testDate,
        contractAcceptance = testDate,
        readerType = Direct)


      val subscribeXML = <ns1:subscribe>
        <ns1:subscribes>
          <ns1:Account xsi:type="ns2:Account">
            <ns2:AutoPay>true</ns2:AutoPay>
            <ns2:BcdSettingOption>AutoSet</ns2:BcdSettingOption>
            <ns2:BillCycleDay>0</ns2:BillCycleDay>
            <ns2:Currency>GBP</ns2:Currency>
            <ns2:Name>123</ns2:Name>
            <ns2:PaymentTerm>Due Upon Receipt</ns2:PaymentTerm>
            <ns2:Batch>Batch1</ns2:Batch>
            <ns2:CrmId>123</ns2:CrmId>
            <ns2:sfContactId__c>123</ns2:sfContactId__c>
            <ns2:IdentityId__c>12345</ns2:IdentityId__c>
            <ns2:PaymentGateway>Stripe Gateway 1</ns2:PaymentGateway>
          </ns1:Account>
          <ns1:BillToContact xsi:type="ns2:Contact">
            <ns2:FirstName>Bob</ns2:FirstName>
            <ns2:LastName>Bobson</ns2:LastName>
            <ns2:Address1>Line 1</ns2:Address1>
            <ns2:Address2>Line 2</ns2:Address2>
            <ns2:City>Tom City</ns2:City>
            <ns2:PostalCode>123</ns2:PostalCode>
            <ns2:State>Tom Land</ns2:State>
            <ns2:Country>TL</ns2:Country>
            <ns2:WorkEmail>test-email-123@thegulocal.com</ns2:WorkEmail>
          </ns1:BillToContact>
          <ns1:PreviewOptions>
            <ns1:EnablePreviewMode>false</ns1:EnablePreviewMode>
            <ns1:NumberOfPeriods>1</ns1:NumberOfPeriods>
          </ns1:PreviewOptions>
          <ns1:SubscribeOptions>
            <ns1:GenerateInvoice>true</ns1:GenerateInvoice>
            <ns1:ProcessPayments>true</ns1:ProcessPayments>
          </ns1:SubscribeOptions>
          <ns1:SubscriptionData>
            <ns1:Subscription xsi:type="ns2:Subscription">
              <ns2:AutoRenew>true</ns2:AutoRenew>
              <ns2:ContractEffectiveDate>2016-01-01</ns2:ContractEffectiveDate>
              <ns2:ContractAcceptanceDate>2016-01-01</ns2:ContractAcceptanceDate>
              <ns2:InitialTerm>12</ns2:InitialTerm>
              <ns2:RenewalTerm>12</ns2:RenewalTerm>
              <ns2:TermStartDate>2016-01-01</ns2:TermStartDate>
              <ns2:TermType>TERMED</ns2:TermType>
              <ns2:ReaderType__c>Direct</ns2:ReaderType__c>
            </ns1:Subscription><ns1:RatePlanData>
            <ns1:RatePlan xsi:type="ns2:RatePlan">
              <ns2:ProductRatePlanId>123</ns2:ProductRatePlanId>
            </ns1:RatePlan>
            <ns1:SubscriptionProductFeatureList>
            </ns1:SubscriptionProductFeatureList>
          </ns1:RatePlanData>
          </ns1:SubscriptionData>
        </ns1:subscribes>
      </ns1:subscribe>

      val writtenSubscribeXML = XmlWriter.write(subscribe).value
      (writtenSubscribeXML \\ "RatePlanData") must equalToIgnoringSpace(XmlWriter.write(rpc).value)
      writtenSubscribeXML must beEqualToIgnoringSpace(subscribeXML)
    }

    "Include the XML generated by SoldToContact if one is provided" in {

      val contact = new ContactId {
        override def salesforceContactId: String = "123"
        override def salesforceAccountId: String = "123"
      }

      val account = Account(
        contact,
        "12345",
        GBP,
        autopay = true,
        paymentGateway = StripeUKMembershipGateway,
        invoiceTemplate = Some(InvoiceTemplate("abc123abc123", Country.Australia))
      )

      val rpc = RatePlan("123", None)

      val buyer = new FullName {
        override def last: String = "Bobson"
        override def first: String = "Bob"
        override def title: Option[Title] = Some(Title.Mr)
      }
      val giftee = new FullName {
        override def last: String = "Gregson"
        override def first: String = "Greg"
        override def title: Option[Title] = Some(Title.Mx)
      }
      val email = "test-email-123@thegulocal.com"

      val soldToContact = SoldToContact(
        name = giftee,
        address = Address("Delivery 1", "Delivery 2", "Delivery City", "Delivery Land", "123", "DA"),
        deliveryInstructions = Some("Place under doormat."),
        email = Some(email),
        phone = NormalisedTelephoneNumber.fromStringAndCountry(Some("020 3353 2000"),Some(Country.UK))
      )

      val subscribe = Subscribe(
        account = account,
        paymentMethod = None,
        ratePlans = NonEmptyList(rpc),
        name = buyer,
        address = Address("Billing 1", "Billing 2", "Billing City", "Billing Land", "123", "BA"),
        email = email,
        soldToContact = Some(soldToContact),
        promoCode = None,
        supplierCode = None,
        contractEffective = testDate,
        contractAcceptance = testDate,
        readerType = Gift
      )
      val xml = <ns1:subscribe>
        <ns1:subscribes>
          <ns1:Account xsi:type="ns2:Account">
            <ns2:AutoPay>true</ns2:AutoPay>
            <ns2:BcdSettingOption>AutoSet</ns2:BcdSettingOption>
            <ns2:BillCycleDay>0</ns2:BillCycleDay>
            <ns2:Currency>GBP</ns2:Currency>
            <ns2:Name>123</ns2:Name>
            <ns2:PaymentTerm>Due Upon Receipt</ns2:PaymentTerm>
            <ns2:Batch>Batch1</ns2:Batch>
            <ns2:CrmId>123</ns2:CrmId>
            <ns2:sfContactId__c>123</ns2:sfContactId__c>
            <ns2:IdentityId__c>12345</ns2:IdentityId__c>
            <ns2:PaymentGateway>Stripe Gateway 1</ns2:PaymentGateway>
            <ns2:InvoiceTemplateId>abc123abc123</ns2:InvoiceTemplateId>
          </ns1:Account>
          <ns1:BillToContact xsi:type="ns2:Contact">
            <ns2:FirstName>Bob</ns2:FirstName>
            <ns2:LastName>Bobson</ns2:LastName>
            <ns2:Address1>Billing 1</ns2:Address1>
            <ns2:Address2>Billing 2</ns2:Address2>
            <ns2:City>Billing City</ns2:City>
            <ns2:PostalCode>123</ns2:PostalCode>
            <ns2:State>Billing Land</ns2:State>
            <ns2:Country>BA</ns2:Country>
            <ns2:WorkEmail>test-email-123@thegulocal.com</ns2:WorkEmail>
            <ns2:Title__c>Mr</ns2:Title__c>
          </ns1:BillToContact>
          <ns1:PreviewOptions>
            <ns1:EnablePreviewMode>false</ns1:EnablePreviewMode>
            <ns1:NumberOfPeriods>1</ns1:NumberOfPeriods>
          </ns1:PreviewOptions>
          <ns1:SoldToContact xsi:type="ns2:Contact">
            <ns2:FirstName>Greg</ns2:FirstName>
            <ns2:LastName>Gregson</ns2:LastName>
            <ns2:Address1>Delivery 1</ns2:Address1>
            <ns2:Address2>Delivery 2</ns2:Address2>
            <ns2:City>Delivery City</ns2:City>
            <ns2:PostalCode>123</ns2:PostalCode>
            <ns2:State>Delivery Land</ns2:State>
            <ns2:Country>DA</ns2:Country>
            <ns2:WorkEmail>test-email-123@thegulocal.com</ns2:WorkEmail>
            <ns2:WorkPhone>+442033532000</ns2:WorkPhone>
            <ns2:SpecialDeliveryInstructions__c>Place under doormat.</ns2:SpecialDeliveryInstructions__c>
            <ns2:Title__c>Mx</ns2:Title__c>
          </ns1:SoldToContact>
          <ns1:SubscribeOptions>
            <ns1:GenerateInvoice>true</ns1:GenerateInvoice>
            <ns1:ProcessPayments>true</ns1:ProcessPayments>
          </ns1:SubscribeOptions>
          <ns1:SubscriptionData>
            <ns1:Subscription xsi:type="ns2:Subscription">
              <ns2:AutoRenew>true</ns2:AutoRenew>
              <ns2:ContractEffectiveDate>2016-01-01</ns2:ContractEffectiveDate>
              <ns2:ContractAcceptanceDate>2016-01-01</ns2:ContractAcceptanceDate>
              <ns2:InitialTerm>12</ns2:InitialTerm>
              <ns2:RenewalTerm>12</ns2:RenewalTerm>
              <ns2:TermStartDate>2016-01-01</ns2:TermStartDate>
              <ns2:TermType>TERMED</ns2:TermType>
              <ns2:ReaderType__c>Gift</ns2:ReaderType__c>
            </ns1:Subscription> <ns1:RatePlanData>
            <ns1:RatePlan xsi:type="ns2:RatePlan">
              <ns2:ProductRatePlanId>123</ns2:ProductRatePlanId>
            </ns1:RatePlan>
            <ns1:SubscriptionProductFeatureList>
            </ns1:SubscriptionProductFeatureList>
          </ns1:RatePlanData>
          </ns1:SubscriptionData>
        </ns1:subscribes>
      </ns1:subscribe>

      XmlWriter.write(subscribe).value must beEqualToIgnoringSpace(xml)
    }
  }
}
